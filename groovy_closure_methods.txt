find()			->	The find method finds the first value in a collection that
						matches some criterion.

findAll()		->	It finds all values in the receiving object matching the
						closure condition.

any() & every()	->	Method any iterates through each element of a collection
						checking whether a Boolean predicate is valid for at
						least one element.

collect()		->	The method collect iterates through a collection,
						converting each element into a new value using the
						closure as the transformer.

collectEntries()->	The method collect entries iterates through a collection,
						converting each element into a new pair of key-value to
						be inserted in a Map. That is to say, it returns a Map.
						The return type must be as in the following example:
							return [(key): value] //include the parenthesis for the key!



LIST:

each() & eachWithIndex ->	Iterates through the list passing each element to
						the closure as a parameter.

split()			->	Splits each item into 2 collections based on the closure 
						condition. Sample usage:
						assert [[2,4],[1,3]] == [1,2,3,4].split { it % 2 == 0 }